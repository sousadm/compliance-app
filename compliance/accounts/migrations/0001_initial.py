# Generated by Django 3.1.7 on 2021-05-03 18:56

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaSAC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(blank=True, max_length=100, verbose_name='Descrição')),
                ('codigo', models.CharField(blank=True, max_length=10, verbose_name='Código')),
                ('is_adm', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Administrativo')),
                ('is_fin', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Financeiro')),
                ('is_sup', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Suporte')),
                ('is_des', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Desenvolvimento')),
                ('is_active', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Em uso')),
                ('tempo_previsto', models.IntegerField(null=True, verbose_name='Tempo previsto em min')),
            ],
            options={
                'verbose_name': 'Categoria SAC',
                'verbose_name_plural': 'Categorias SAC',
                'db_table': 'sac_categoria',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'permitido letras, digitos ou os seguintes caracteres: @/./+/-/_', 'invalid')], verbose_name='Usuário')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome')),
                ('celular', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular')),
                ('is_active', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Administrador')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('is_sac', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Atendimento SAC')),
                ('is_adm', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Administrativo')),
                ('is_fin', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Financeiro')),
                ('is_sup', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Suporte')),
                ('is_des', models.BooleanField(blank=True, choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Desenvolvimento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
